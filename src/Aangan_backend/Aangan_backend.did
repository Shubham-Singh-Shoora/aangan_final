type Role = variant {
    Landlord;
    Tenant
};

type User = record {
    user_principal : principal;
    role : Role;
    name : opt text;
    email : opt text;
    phone : opt text;
    created_at : nat64;
    updated_at : nat64;
};

type PropertyType = variant {
    Apartment;
    House;
    Villa;
    Studio;
    Condo;
    Townhouse
};

type Property = record {
    id : nat64;
    owner : principal;
    title : text;
    description : text;
    address : text;
    rent_amount : nat64;
    deposit_amount : nat64;
    property_type : PropertyType;
    bedrooms : nat32;
    bathrooms : nat32;
    area_sqft : nat32;
    images : vec text;
    amenities : vec text;
    is_available : bool;
    created_at : nat64;
    updated_at : nat64;
};

type RentalStatus = variant {
    Requested;
    UnderReview;
    Approved;
    Confirmed;
    Active;
    Completed;
    Rejected;
    Cancelled
};

type RentalAgreement = record {
    id : nat64;
    property_id : nat64;
    landlord : principal;
    tenant : principal;
    status : RentalStatus;
    start_date : nat64;
    end_date : nat64;
    rent_amount : nat64;
    deposit_amount : nat64;
    nft_id : opt nat64;
    created_at : nat64;
    updated_at : nat64;
};

type NFTAttribute = record {
    trait_type : text;
    value : text
};

type NFTMetadata = record {
    id : nat64;
    owner : principal;
    property_id : nat64;
    rental_agreement_id : nat64;
    name : text;
    description : text;
    image : text;
    attributes : vec NFTAttribute;
    created_at : nat64;
};

type EscrowStatus = variant {
    PendingSubmission;
    UnderReview;
    FundsSecured;
    ActiveProtection;
    RefundProcessing;
    Completed;
    Disputed;
    Cancelled
};

type EscrowEventType = variant {
    Created;
    DepositSubmitted;
    LandlordApproval;
    FundsLocked;
    LeaseActivated;
    PropertyInspected;
    RefundInitiated;
    RefundCompleted;
    DisputeRaised;
    DisputeResolved;
    Cancelled
};

type EscrowAccount = record {
    id : nat64;
    rental_id : nat64;
    property_id : nat64;
    landlord : principal;
    tenant : principal;
    amount : nat64;
    status : EscrowStatus;
    submission_deadline : nat64;
    created_at : nat64;
    updated_at : nat64;
    smart_contract_address : opt text;
    transaction_hash : opt text;
    refund_amount : opt nat64;
    dispute_reason : opt text;
};

type EscrowTimelineEvent = record {
    id : nat64;
    escrow_id : nat64;
    event_type : EscrowEventType;
    title : text;
    description : text;
    timestamp : nat64;
    amount : opt nat64;
    transaction_hash : opt text;
    metadata : opt text;
};

type CreateEscrowRequest = record {
    rental_id : nat64;
    property_id : nat64;
    landlord : principal;
    tenant : principal;
    amount : nat64;
};

type Result = variant {
    Ok;
    Err : text
};

type UserResult = variant {
    Ok : User;
    Err : text
};

type PropertyResult = variant {
    Ok : Property;
    Err : text
};

type PropertiesResult = variant {
    Ok : vec Property;
    Err : text
};

type RentalResult = variant {
    Ok : RentalAgreement;
    Err : text
};

type RentalsResult = variant {
    Ok : vec RentalAgreement;
    Err : text
};

type NFTResult = variant {
    Ok : NFTMetadata;
    Err : text
};

type EscrowResult = variant {
    Ok : EscrowAccount;
    Err : text
};

service : {
    // User API
    "create_user" : (Role, opt text, opt text, opt text) -> (UserResult);
    "get_user" : (opt principal) -> (UserResult) query;
    "update_user_profile" : (opt text, opt text, opt text) -> (UserResult);
    "get_all_users" : () -> (vec User) query;
    "get_my_profile" : () -> (UserResult) query;

    // Property API
    "add_property" : (text, text, text, nat64, nat64, PropertyType, nat32, nat32, nat32, vec text, vec text) -> (PropertyResult);
    "get_all_properties" : () -> (vec Property) query;
    "get_available_properties" : () -> (vec Property) query;
    "get_property_by_id" : (nat64) -> (PropertyResult) query;
    "get_properties_by_landlord" : (opt principal) -> (vec Property) query;
    "get_my_properties" : () -> (PropertiesResult) query;
    "update_property_availability" : (nat64, bool) -> (PropertyResult);
    "update_property" : (nat64, text, text, text, nat64, nat64, PropertyType, nat32, nat32, nat32, vec text, vec text) -> (PropertyResult);
    "delete_property" : (nat64) -> (Result);

    // Rental API
    "request_rental" : (nat64, nat64, nat64) -> (RentalResult);
    "confirm_rental" : (nat64) -> (RentalResult);
    "cancel_rental" : (nat64) -> (RentalResult);
    "get_my_rentals" : () -> (vec RentalAgreement) query;
    "get_rental_by_id" : (nat64) -> (RentalResult) query;
    
    // New Approval API Methods
    "get_pending_rental_requests" : () -> (RentalsResult) query;
    "get_approved_rentals" : () -> (RentalsResult) query;
    "approve_rental_request" : (nat64) -> (RentalResult);
    "reject_rental_request" : (nat64) -> (RentalResult);
    "mark_rental_under_review" : (nat64) -> (RentalResult);

    // NFT API
    "get_my_nfts" : () -> (vec NFTMetadata) query;
    "get_nft_by_id" : (nat64) -> (NFTResult) query;
    "get_nft_metadata" : (nat64) -> (NFTResult) query;

    // Escrow API
    "get_escrow_accounts_for_user" : (principal) -> (vec EscrowAccount) query;
    "get_escrow_accounts_by_landlord" : (principal) -> (vec EscrowAccount) query;
    "get_escrow_accounts_by_tenant" : (principal) -> (vec EscrowAccount) query;
    "get_escrow_account_by_id" : (nat64) -> (opt EscrowAccount) query;
    "get_escrow_timeline_events" : (nat64) -> (vec EscrowTimelineEvent) query;
    "get_user_escrow_statistics" : (principal) -> (nat64, nat64, nat64, nat64, nat64) query;
    "create_escrow_account" : (CreateEscrowRequest) -> (EscrowResult);
    "submit_security_deposit" : (nat64, text) -> (EscrowResult);
    "approve_security_deposit" : (nat64, text) -> (EscrowResult);
    "activate_escrow_protection" : (nat64) -> (EscrowResult);
    "initiate_refund" : (nat64, nat64) -> (EscrowResult);
    "complete_refund" : (nat64, text) -> (EscrowResult);
};
